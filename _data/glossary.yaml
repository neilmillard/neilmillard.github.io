---
DevOps: A term used in Agile.<br />1. A role that uses a mix of Infrastructure and
  Development Skills, often creating automated workflows and IaC.<br />2. A term that
  describes a way of teams working together
IaC: Infrastructure as Code. <br />Where code is written that can create or destroy
  infrastructure and computer environments.
Infrastructure: Refers to Servers, Routers, Network Switches, Firewall and other foundational
  components of a software system. Can be purchased on a Pay as You Use from Cloud Providers.
Servers: Compute power of a Software System. Where computers and CPUs are employed
  to carry out the work.
Network: The connections between servers. This enables communication between software
  system components as well as the internet
Network Switch: A physical device (is virtual in Cloud Environments), to marshall
  network traffic and communications between software system components.
Router: A network device that links networks together
Firewall: A network device that controls access between network components
Software System: A collection of software, hardware and virtual hardware that makes
  up a system for running software
Platform: Managed IaC to simplify the deployment of Software Systems.
Agile: Do just enough design to start delivering value. Iteritive and continious
  improvement of software/product.
Development: Creation and improvement of software running in a Software System.
Microservice: A small and deployable software program, part of a Software System.
AWS: Amazon Web Services, a public cloud provider. Infrastructure as a service.
Blockers: An issue identified by an Agile team that is halting or slowing down progress.
Capital Expense: CapEx, the money a project/company spends to buy, maintain or improve
  it's fixed assets, such as buildings, vehicles and hardware.
Computer Process: A program or function that provides results (outputs) based on data (inputs).
Configuration Management: Used to apply configuration to platforms, servers and software.
Containers: A process running on a server, in a jail from a predefined disk image/file structure.
Continuous Integration: A pipeline where automated tests check commited code, providing a fast
  feedback loop to uncover errors.
CPU: Central Processing Unit. This provides the computer the power to run programs, code and tasks.
Data Centre: A dedicated space that is climate controlled and secure, for housing and operating
  servers and other infrastructure.
Dependencies: Reuseable stock or library code, that are installed alongside the main developer's
  code for the application to work.
Hybrid private and public cloud: A mix of private and public cloud, usually seen during migrations
  and for sensitive data reasons.
Hypervisor: A system that runs on a server to enable virtual machines to run.
Kanban: An inventory and scheduling system. Used in software development, like SCRUM, however the
  tasks are not timeboxed, but subjected to other measures and limits.
Memory: Where computers temporarily store data.
Memory (Non-Volatile): is able to store data for long periods of time, like tape or disks.
Memory (RAM): Random access memory, programs and data stored while the computer is on.
Memory (ROM): Read-only memory, programs and data stored while computer is off. Usually contains
  bootstrap code.
Operation Expenses: OpEx, the ongoing costs running a product, business or system.
Pair Programming: Where two people working together on a task improves efficiency. E.g building
  a wardrobe.
Pipeline: A defined process that links tasks together, usually on a continuous integration server.
SCRUM: A framework for organising tasks. Tasks are scheduled into a timeboxed period known as a Sprint.
Source Control: Where code is stored, in a way that every change and version is also kept. Useful for
  auditing and finding bugs due to changes.
Test Driven Development: TDD - A programming practice where the tests are written first. A test ensures
  that given a set of inputs, a program or function produces the correct output.
Virtualisation: Enabling the resources of a computer to run more than one logical computer in an isolated
  way on the same computer, whilst they are not aware of each other.
